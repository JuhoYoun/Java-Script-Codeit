웹 서비스와 JavaScript 

지금은 웹뿐만 아니라 다양한 분야에서 사용되지만 원래 JS 는 웹페이지의 여러 요소들을 더 자유롭게 다루기 위해 등장했다 html로 웹페이지의 구조를 만들고 css로 웹페이지를 꾸며준다음 JS가 
웹페이지를 다양하게 동작하도록 만드는것이다 
------------------------------------------------------------------------------------------------------------------------------------------------------

02. HTML/CSS + JavaScript 맛보기

여기 html 과 css를 가지고 간단하게 만든 프로젝트가 있다 

index.html

<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>JS with Codeit</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div id="myNumber">0</div>
  <div id="btns">
    <div>
      <button id="decrease">-</button>
      <button id="increase">+</button>
    </div>
    <div>
      <button class="color-btn red" data-color="#FF0000"></button>
      <button class="color-btn orange" data-color="#FFA500"></button>
      <button class="color-btn yellow" data-color="#FFFF00"></button>
      <button class="color-btn green" data-color="#008000"></button>
      <button class="color-btn blue" data-color="#0000FF"></button>
      <button class="color-btn indigo" data-color="#4B0082"></button>
      <button class="color-btn purple" data-color="#800080"></button>
      <button class="color-btn black" data-color="#000000"></button>
    </div>
  </div>
    <!-- <script src="index.js"></script> -->
</body>
</html>

style.css

#myNumber {
  font-size: 100px;
}

.color-btn {
  width: 30px;
  height: 30px;
  border: none;
  cursor: pointer;
  margin-top: 15px;
}

.red { background-color: #FF0000; }
.orange { background-color: #FFA500; }
.yellow { background-color: #FFFF00; }
.green { background-color: #008000; }
.blue { background-color: #0000FF; }
.indigo { background-color: #4B0082; }
.purple { background-color: #800080; }
.black { background-color: #000000; }

브라우저로 어떤 페이지가 나오는지 확인해보자 정적인 페이지다 html과 css는 이렇게 한번 웹페이지에 나오면 그 뒤에는 변화를 주기 어려운 한계가 있다

이번에는 아래 index.js 파일을 추가해주고 index.html의 코멘트 부분을 풀어주자 
그러면 동적인 페이지로 변한것을 확인할 수 있다 이렇게 html과 css에 JS 코드가 더해지면 실시간으로 html 코드가 변할수도 있고 아니면 스타일을 수정하는것도 가능하다 


index.js

const myNumberTag = document.getElementById('myNumber');
const decreaseBtn = document.getElementById('decrease');
const increaseBtn = document.getElementById('increase');

let myNumber = +myNumberTag.textContent;

decreaseBtn.onclick = function() {
  myNumber--;
  myNumberTag.textContent = myNumber;
};

increaseBtn.onclick = function() {
  myNumber++;
  myNumberTag.textContent = myNumber;
};

const colorBtns = document.getElementsByClassName('color-btn');

for (let btn of colorBtns) {
  btn.onclick = function() {
    myNumberTag.style.color = btn.dataset.color;
  };
}

----------------------------------------------------------------------------------------------------------------------------------

id로 태그 선택하기

어떤 태그를 움직이거나 사용자의 마우스 클릭에 반응하도록 하려면 먼저 내가 다루고자 하는 태그를 선택해야한다 JS로 우리가 원하는 태그를 선택하는 방법은 여러가지가 있다 이번에는 id 속성을 통해 html 태그를 선택하는 방법을 해보자 
먼저 기본적인 문법을 살펴보자 JS에서 미리 만들어져있는 document 라는 객체의 getElementById 라는 메소드를 사용한다 이름 그대로 id 속성을 통해서 어떤 요소를 가져오겠다는 의미이다 
이 메소드의 패러미터로 우리가 접근하고자하는 태그의 id 값을 문자열로 전달해주면 해당 태그가 선택되는 원리이다  자 html 코드를 봐보자   

index.html

<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>JS with Codeit</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div id="myNumber">0</div>
  <div id="btns">
    <div>
      <button id="decrease">-</button>
      <button id="increase">+</button>
    </div>
    <div>
      <button class="color-btn red" data-color="#FF0000"></button>
      <button class="color-btn orange" data-color="#FFA500"></button>
      <button class="color-btn yellow" data-color="#FFFF00"></button>
      <button class="color-btn green" data-color="#008000"></button>
      <button class="color-btn blue" data-color="#0000FF"></button>
      <button class="color-btn indigo" data-color="#4B0082"></button>
      <button class="color-btn purple" data-color="#800080"></button>
      <button class="color-btn black" data-color="#000000"></button>
    </div>
  </div>
  <script src="index.js"></script>
</body>
</html>  



